services:
  # Python-flask application with web portal and API.
  portal:
    build: ./portal
    ports:
      - 9003:80
    environment:
      AMQP_CONNECTION_STRING: "amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/"
      DB_CONNECTION_STRING: "postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/openrivercam"
      S3_ENDPOINT_URL: "${MINIO_ACCESS_URL}"
      S3_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
      S3_ACCESS_SECRET: "${MINIO_SECRET_KEY}"
      APP_SECRET_KEY: "${APP_SECRET_KEY}"
      SECURITY_PASSWORD_SALT: "${SECURITY_PASSWORD_SALT}"
    volumes:
      - type: bind
        source: ./portal
        target: /app
    depends_on:
      - storage
      - rabbitmq

  # Python application for data processing.
  processing:
    build: ./processing
    environment:
      AMQP_CONNECTION_STRING: "amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/"
      S3_ENDPOINT_URL: "${MINIO_ACCESS_URL}"
      S3_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
      S3_ACCESS_SECRET: "${MINIO_SECRET_KEY}"
      ORC_API_URL: "http://portal/api"
    volumes:
      - type: bind
        source: ./processing
        target: /app
    depends_on:
      - portal
      - storage
      - rabbitmq
    restart: always

  # S3 storage application which mimics AWS storage service.
  storage:
    image: minio/minio
    ports:
      - 9000:9000
    environment:
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY}"
    volumes:
      - storage-data:/data
    command: server /data

  # Message broker for processing queue.
  rabbitmq:
    image: rabbitmq:3.8.9-management
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD}"

  # Postgress database.
  db:
    image: postgres:9
    ports:
      - 9001:5432
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "openrivercam"
    volumes:
      - pg-data:/var/lib/postgresql/data

# Persistent volume for storage container, not mounted to host OS.
volumes:
  storage-data:
  pg-data:
